name: CI

on:
  push:
    branches: [ master ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
    
    - name: Install wasm-pack (Unix)
      if: runner.os != 'Windows'
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    
    - name: Install wasm-pack (Windows)
      if: runner.os == 'Windows'
      run: |
        Invoke-WebRequest https://github.com/rustwasm/wasm-pack/releases/download/v0.13.1/wasm-pack-v0.13.1-x86_64-pc-windows-msvc.tar.gz -OutFile wasm-pack.tar.gz
        tar -xzf wasm-pack.tar.gz
        Move-Item wasm-pack-v0.13.1-x86_64-pc-windows-msvc/wasm-pack.exe "$env:USERPROFILE\.cargo\bin\"
    
    - name: Install worker-build
      run: cargo install worker-build
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build backend
      run: cargo build --release
    
    - name: Test backend build for worker
      run: worker-build --release --no-opt
    
    - name: Build CLI
      working-directory: ./cli
      run: cargo build --release
    
    - name: Test CLI help command
      working-directory: ./cli
      run: cargo run -- --help